// –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–∏–∫–∏ –ø–æ–¥—Å—á–µ—Ç–∞ total
// –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–∂–∏–¥–∞–µ–º–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ

console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –ø–æ–¥—Å—á–µ—Ç–∞ total\n');

// –°–∏–º—É–ª—è—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
const mockRecipes = [
  { id: 1, title: '–†–µ—Ü–µ–ø—Ç 1', ingredients: [1, 2, 3] },
  { id: 2, title: '–†–µ—Ü–µ–ø—Ç 2', ingredients: [1, 2] },
  { id: 3, title: '–†–µ—Ü–µ–ø—Ç 3', ingredients: [1, 2, 3, 4] },
  { id: 4, title: '–†–µ—Ü–µ–ø—Ç 4', ingredients: [1, 2, 3, 4, 5] },
  { id: 5, title: '–†–µ—Ü–µ–ø—Ç 5', ingredients: [1, 2, 3, 4, 5, 6] },
];

const userIngredients = [1, 2, 3, 4, 5];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π
function calculateMatch(recipeIngredients, userIngredients) {
  const matched = recipeIngredients.filter((ing) =>
    userIngredients.includes(ing)
  );
  const percentage = (matched.length / recipeIngredients.length) * 100;
  return {
    matchedCount: matched.length,
    totalCount: recipeIngredients.length,
    matchPercentage: Math.round(percentage),
  };
}

// –¢–µ—Å—Ç 1: –ë–µ–∑ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ (–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ü–µ–ø—Ç–æ–≤)
console.log('üìã –¢–µ—Å—Ç 1: –ë–µ–∑ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤');
console.log('–û–∂–∏–¥–∞–µ–º—ã–π total:', mockRecipes.length);
console.log('–õ–æ–≥–∏–∫–∞: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤\n');

// –¢–µ—Å—Ç 2: –° –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º–∏ (–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å —Ç–æ–ª—å–∫–æ 100% —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è)
console.log('üìã –¢–µ—Å—Ç 2: –° –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º–∏');
console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:', userIngredients);

const results = mockRecipes.map((recipe) => {
  const match = calculateMatch(recipe.ingredients, userIngredients);
  return {
    ...recipe,
    ...match,
    isPerfectMatch: match.matchPercentage === 100,
  };
});

console.log('\n–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:');
results.forEach((recipe) => {
  console.log(
    `- ${recipe.title}: ${recipe.matchedCount}/${recipe.totalCount} (${recipe.matchPercentage}%) ${recipe.isPerfectMatch ? '‚úÖ 100%' : ''}`
  );
});

const perfectMatches = results.filter((r) => r.isPerfectMatch);
console.log(
  `\n–û–∂–∏–¥–∞–µ–º—ã–π total: ${perfectMatches.length} (—Ç–æ–ª—å–∫–æ 100% —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è)`
);

// –¢–µ—Å—Ç 3: –†–∞–∑–ª–∏—á–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏
console.log('\nüìã –¢–µ—Å—Ç 3: –†–∞–∑–ª–∏—á–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏');

const scenarios = [
  { name: '–ü—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤', ingredients: [] },
  { name: '–û–¥–∏–Ω –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç', ingredients: [1] },
  { name: '–í—Å–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã', ingredients: [1, 2, 3, 4, 5, 6] },
  { name: '–ß–∞—Å—Ç–∏—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ', ingredients: [1, 2, 3] },
];

scenarios.forEach((scenario) => {
  console.log(`\n${scenario.name}:`);

  if (scenario.ingredients.length === 0) {
    console.log('  total = –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ü–µ–ø—Ç–æ–≤');
  } else {
    const matches = results.filter((r) => {
      const match = calculateMatch(r.ingredients, scenario.ingredients);
      return match.matchPercentage === 100;
    });
    console.log(`  total = ${matches.length} (100% —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è)`);
  }
});

console.log('\n‚úÖ –õ–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
console.log('\nüìù –†–µ–∑—é–º–µ:');
console.log('- –ë–µ–∑ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤: total = –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ü–µ–ø—Ç–æ–≤');
console.log(
  '- –° –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º–∏: total = –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ü–µ–ø—Ç–æ–≤ —Å 100% —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ–º'
);
